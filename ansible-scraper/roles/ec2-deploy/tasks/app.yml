---
  # fetch source code and install
- name: Clone source repository
  git:
    repo: "{{ repo_url }}"
    dest: /home/{{ ansible_ssh_user }}/{{ app_name }}
    update: yes  # Does a git pull if the repo already exists
    force: yes

- name: Install virtualenv packages
  pip:
    requirements: /home/{{ ansible_ssh_user }}/{{ app_name }}/requirements.txt
    virtualenv: /home/{{ ansible_ssh_user }}/{{ app_name }}/env
    virtualenv_python: python3

- name: Install {{ app_name }} source
  pip:
    name: /home/{{ ansible_ssh_user }}/{{ app_name }}
    extra_args: '-e'   # installs editably
    virtualenv: /home/{{ ansible_ssh_user }}/{{ app_name }}/env

- name: Manager Database initalization
  command: >
    /home/{{ ansible_ssh_user }}/{{ app_name }}/env/bin/{{ entry_point }}
    db
    init
  ignore_errors: yes
  args:
    chdir: /home/{{ ansible_ssh_user }}/{{ app_name }}

- name: Manager Database migration
  command: >
    /home/{{ ansible_ssh_user }}/{{ app_name }}/env/bin/{{ entry_point }}
    db
    migrate
  ignore_errors: yes
  args:
    chdir: /home/{{ ansible_ssh_user }}/{{ app_name }}

- name: Manager Database upgrade
  command: >
    /home/{{ ansible_ssh_user }}/{{ app_name }}/env/bin/{{ entry_point }}
    db
    upgrade
  ignore_errors: no
  args:
    chdir: /home/{{ ansible_ssh_user }}/{{ app_name }}
